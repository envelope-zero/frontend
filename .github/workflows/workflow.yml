name: Test, build and push

on:
  push:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2

      - name: Cache dependencies
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: install node modules
        run: npm ci

      - uses: pre-commit/action@v3.0.0

  cypress:
    runs-on: ubuntu-latest

    # Current backend version as service container
    services:
      backend:
        image: ghcr.io/envelope-zero/backend:v2.6.3
        env:
          CORS_ALLOW_ORIGINS: http://localhost:3001
          API_URL: http://localhost:3001/api
        ports:
          - 8080:8080

    steps:
      - uses: actions/checkout@v3.5.2

      - uses: cypress-io/github-action@v5.7.1
        env:
          PORT: 3001
          # The URL that the react-scripts dev server proxies /api to
          API_URL: http://localhost:8080
        with:
          start: npm start
          # Frontend runs on :3001, API on :8080
          wait-on: 'http://localhost:3001, http://localhost:8080'
          browser: chrome

      - uses: actions/upload-artifact@v3.1.2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@v3.1.2
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos

  build-and-push-image:
    needs:
      - pre-commit
      - cypress

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check if image should be pushed
        id: push_check
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "::set-output name=push::true"
          else
            echo "::set-output name=push::false"
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: ${{ steps.push_check.outputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            REACT_APP_VERSION=${{ github.ref_name }}
